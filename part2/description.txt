Q: Что такое метакласс?

A: Это класс, который создает классы, фабрика классов. Для создания классов используется класс type. Который позволяет на
вход принимать разные параметры: type(name, bases, dict) -> a new type, в результате создается класс с именем name
унаследованный от bases и содержащий __dict__ (dict).  Также есть возможность в модуле использовать __metaclass__ - любой
callable объект, принимающий на вход все то же, что и type. Срабатывает при создании любого класса в модуле, и ему передаются
все параметры (name, bases и dict) этого класса. Используя их можно добавлять всем классам нужные аттрибуты.

Q: Что такое slots?

A: Замена __dict__, можно вручную указать, какие аттрибуты есть у класса, повышает производительность, не создается
__dict__

Напишите декоратор которым можно обернуть класс, который на все не реализованные методы будет возвращать исключение переданное ему в параметре.

@replace_exception(KeyError)
class A(object):
    pass

a = A()
try:
    a.test()
except KeyError:
    print 'Cool'
На выполнение 14 часов, задания можно разбить на два этапа (разделитель "Что такое метакласс?")

Решение: replace_exception.py
